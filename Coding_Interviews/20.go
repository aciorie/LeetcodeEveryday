package codinginterviews

/*
面试题 20. 表示数值的字符串


题目描述
请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。

数值（按顺序）可以分成以下几个部分：

若干空格
一个 小数 或者 整数
（可选）一个 'e' 或 'E' ，后面跟着一个 整数
若干空格
小数（按顺序）可以分成以下几个部分：

（可选）一个符号字符（'+' 或 '-'）
下述格式之一：
至少一位数字，后面跟着一个点 '.'
至少一位数字，后面跟着一个点 '.' ，后面再跟着至少一位数字
一个点 '.' ，后面跟着至少一位数字
整数（按顺序）可以分成以下几个部分：

（可选）一个符号字符（'+' 或 '-'）
至少一位数字
部分数值列举如下：

["+100", "5e2", "-123", "3.1416", "-1E-16", "0123"]
部分非数值列举如下：

["12e", "1a3.14", "1.2.3", "+-5", "12e+5.4"]


示例 1：

输入：s = "0"
输出：true
示例 2：

输入：s = "e"
输出：false
示例 3：

输入：s = "."
输出：false
示例 4：

输入：s = "    .1  "
输出：true


提示：

1 <= s.length <= 20
s 仅含英文字母（大写和小写），数字（0-9），加号 '+' ，减号 '-' ，空格 ' ' 或者点 '.' 。
*/
func isNumber(s string) bool {
	i, j := 0, len(s)-1

	// 跳过字符串开头的空格
	for i < j && s[i] == ' ' {
		i++
	}
	// 跳过字符串末尾的空格
	for i <= j && s[j] == ' ' {
		j--
	}
	// 如果 i 大于 j，说明字符串中没有有效字符，返回 false
	if i > j {
		return false
	}

	digit, dot, e := false, false, false

	for ; i <= j; i++ {
		// 处理正负号
		if s[i] == '+' || s[i] == '-' {
			// 如果正负号不是在字符串的开头或 'e'/'E' 后面，返回 false
			if i > 0 && s[i-1] != ' ' && s[i-1] != 'e' && s[i-1] != 'E' {
				return false
			}
			// 处理数字字符
		} else if s[i] >= '0' && s[i] <= '9' {
			digit = true // 标记已经遇到数字
			// 处理小数点
		} else if s[i] == '.' {
			// 如果已经遇到小数点或 'e'/'E'，返回 false
			if dot || e {
				return false
			}
			dot = true // 标记已经遇到小数点

			// 处理科学计数法的 'e' 或 'E'
		} else if s[i] == 'e' || s[i] == 'E' {
			// 如果没有遇到数字或已经遇到 'e'，返回 false
			if !digit || e {
				return false
			}
			digit, e = false, true // 重置 digit，标记已经遇到 'e'
			// 处理无效字符
		} else {
			return false
		}
	}
	// 如果至少遇到一个数字，返回 true
	return digit
}
